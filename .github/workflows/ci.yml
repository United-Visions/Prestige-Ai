name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    # Why Mac and Windows?
    # I can't run electron playwright on ubuntu-latest and
    # Linux support for Dyad is experimental so not as important
    # as Mac + Windows
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            { name: "windows", image: "windows-latest" },
            { name: "macos", image: "macos-latest" },
            { name: "linux", image: "ubuntu-latest" },
          ]
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Initialize environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --reporter=silent
      - name: Install Playwright (macOS + Linux)
        if: contains(matrix.os.name, 'macos') || contains(matrix.os.name, 'linux')
        run: pnpm exec playwright install --with-deps
      - name: Presubmit check (e.g. lint, format)
        # do not run this on Windows (it fails and not necessary)
        if: contains(matrix.os.name, 'macos') || contains(matrix.os.name, 'linux')
        run: pnpm run lint
      - name: Type-checking
        # do not run this on Windows (redundant there)
        if: contains(matrix.os.name, 'macos') || contains(matrix.os.name, 'linux')
        run: pnpm exec tsc -p tsconfig.json --noEmit
      - name: Unit tests
        # do not run this on Windows (redundant there)
        if: contains(matrix.os.name, 'macos') || contains(matrix.os.name, 'linux')
        run: pnpm run test:unit
      - name: Component tests (Playwright)
        if: contains(matrix.os.name, 'macos')
        run: pnpm run test:component
      - name: E2E tests (Playwright)
        if: contains(matrix.os.name, 'macos')
        run: pnpm run test:e2e

  build-artifacts:
    name: Build release artifacts
    runs-on: ${{ matrix.os.image }}
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            { name: "macos", image: "macos-latest" },
            { name: "windows", image: "windows-latest" },
            { name: "linux", image: "ubuntu-latest" },
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Initialize environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --reporter=silent
      - name: Disable macOS code signing
        if: contains(matrix.os.name, 'macos')
        run: echo "CSC_IDENTITY_AUTO_DISCOVERY=false" >> $GITHUB_ENV
      - name: Build app
        run: |
          if [[ "${{ matrix.os.name }}" == "macos" ]]; then
            pnpm run build:mac
          elif [[ "${{ matrix.os.name }}" == "windows" ]]; then
            pnpm run build:win
          elif [[ "${{ matrix.os.name }}" == "linux" ]]; then
            pnpm run build:linux
          fi
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prestige-${{ matrix.os.name }}-${{ github.ref_name }}
          path: |
            builds/**/*.dmg
            builds/**/*.zip
            builds/**/*.exe
            builds/**/*.AppImage
            builds/**/*.tar.gz
            !**/node_modules/**
      
